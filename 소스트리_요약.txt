*develop branch (개발용 브랜치)*

develop 브랜치 용도 : 각자의 자료 혹은 코드 develop브랜치에 올려서 병합해보기,
        		    문제 없고 원활히 작동될 시 master(최종)으로 올림.
        		    이때 각자 작업공간은 dev브랜치말고 따로 '날짜_이름_작업내용' 형식의 개인 브랜치로 설정
			ex) 240427_aaa_crawling
	    		     240427_bbb_preprocessing
                		     240427_ccc_visualization

브랜치 사용 방법 :

	※ 개인 브랜치 -> dev

	  1)  240427_aaa_crawling 브랜치에서 작업 완료
	  2)  커밋(내용 반영)
	  3) dev브랜치로 이동
		- 소스트리 왼쪽 브랜치 목록에서 develop 브랜치 더블 클릭해서 checkout (브랜치 전환)
	  4) dev 브랜치 최신 내용 가져오기
		- dev 브랜치 선택된 상태에서 → Pull 버튼 클릭
		(만약 다른 사람이 dev에 뭘 올렸을 수도 있으니까 내 dev를 최신화)
	  5) 내 개인 브랜치 merge
		- dev 브랜치 선택된 상태에서
		  상단 메뉴 → Merge 버튼 클릭
		  "병합할 브랜치" 선택할 때 내 개인 브랜치(240427_aaa_crawling) 선택
		  → Merge 실행
	  6) 충돌이 생기면?
		- 소스트리에 충돌 파일 뜸
		- 충돌 해결한 후 저장하고 커밋
	  7) 병합 끝났으면 dev 브랜치 push
		- 병합 완료되면 Push 버튼 클릭해서
		→ dev 브랜치 내용을 원격(dev)에도 올리기
	
	※ dev -> master (이 과정은 프로젝트 통합, 최종 완료 시점에 진행)

	  1) master 브랜치롤 이동
		- 소스트리에서 master 브랜치 더블 클릭해서 checkout
	  2) master 브랜치로 최신화
		- Pull 버튼 눌러서 master 최신상태로
	  3) dev 브랜치 merge
		- master 브랜치 선택된 상태에서 상단 merge 클릭, 
		- 병합할 브랜치로 dev 선택하고 merge 실행
	  4) 병합 확인
		- 소스트리 커밋 기록에 "Merge branch 'dev' into 'master'" 같은 메시지가 생겼는지 확인
		- (필요하면 master에서 한번 코드 돌려서 진짜 잘 되는지도 체크)
	  5) master push
		- 다 확인했으면 Push 버튼 눌러서 master 브랜치 원격저장소에 올리기


Git / Sourcetree 기본 용어 : 
	### 1. 커밋(Commit)
	- 내 컴퓨터에 작업 내용을 저장
	- 작업 완료 시점까지 기록

	### 2. 푸쉬(Push)
	- 내 컴퓨터의 작업 내용을 원격 저장소(서버)로 보내기
	- 팀원들과 공유할 때 사용

	### 3. 풀(Pull)
	- 원격 저장소의 작업 내용을 내 컴퓨터로 가져오기
	- 팀원들의 작업을 가져와야 할 때 사용

	### 4. 패치(Patch)
	- 변경된 부분만 가져오는 기술
	- 전체가 아니라 변경사항만 업데이트

	### 5. 머지(Merge)
	- 작업 결과를 합치기
	- 내 작업을 dev 브랜치에 합칠 때 사용

	### 6. 풀 리퀘스트(Pull Request, PR)
	- 내 작업을 dev나 master에 합치자고 요청하는 것
	- GitHub, GitLab에서 사용

작업 순서 :
	[내 컴퓨터]
  	- 파일 수정
  	- Commit(작업 저장)
  	↓
	Push(서버로 보내기)
	↓
	[원격 저장소]
  	- 다른 팀원 Pull(가져오기)
  	- Merge(작업 합치기)
핵심 정리 :
	커밋 -> 내 컴퓨터에 저장  (기능 완성했을 때)
	푸쉬 -> 서버로 올리기  (팀에 공유할 때)
	풀    -> 서버에서 가져오기  (팀원 작업 가져올때)  